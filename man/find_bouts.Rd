% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_bouts.R
\name{find_bouts}
\alias{find_bouts}
\title{Find Bout Indices in a Trajectory Data Frame}
\usage{
find_bouts(trajectory, min_distance, min_time, return_peaks = FALSE)
}
\arguments{
\item{trajectory}{a trajectory data frame. See `create_trajectory()` for more
details.}

\item{min_distance}{the minimum distance the zebrafish must travel between
two consecutive points for a peak to be detected. Ideally, this should
clearly separate the burst motion of a zebrafish (where it travels greater
distances between consecutive time points) from when it is not actively
moving.}

\item{min_time}{the minimum time required between peaks. This must have the
same units as the times within the trajectory data frame.}

\item{return_peaks}{whether or not to also return peak indices.}
}
\value{
a vector of indices corresponding to the beginnings of swim bouts. If
  return_peaks is `TRUE`, this function returns a list with the names
  `"bouts"`, containing swim bout indices, and `"peaks"`, containing indices
  of the corresponding peaks used to identify swim bouts.
}
\description{
This function calculates row indices in the trajectory data
  frame that correspond to the beginnings of swim bouts. During a swim bout,
  a zebrafish larva travels with a sudden burst of motion, rather than
  continuous movement.

  The algorithm for calculating swim bouts is as follows. First, peaks (local
  maxima) in the time series of distances traveled between consecutive time
  points in the trajectory data frame are found. Next, potential row indices
  corresponding to the beginnings of swim bouts are identified. Finally, each
  bout index is paired with a peak index occuring afterwards. If any bout or
  peak indices remain, they are discarded.
}
\examples{
trajectory <- create_trajectory(cadmium_zebrafish,
                                x = "X.center",
                                y = "Y.center",
                                t = "Trial.time")
bouts_and_peaks_list <- find_bouts(trajectory,
                                   min_distance = 2,
                                   min_time = 0.6,
                                   return_peaks = TRUE)
bouts <- bouts_and_peaks_list$bouts
peaks <- bouts_and_peaks_list$peaks

}
