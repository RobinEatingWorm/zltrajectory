% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_diagnostics}
\alias{plot_diagnostics}
\title{Plot Distance Time Series with Diagnostic Features}
\usage{
plot_diagnostics(
  trajectory,
  main = "Distance Traveled Since Previous Time",
  xlab = "Time",
  ylab = "Distance",
  time_indices = NULL,
  hlines = NULL,
  time_min = min(trajectory$t),
  time_max = max(trajectory$t),
  ylim = NULL,
  col_time_indices = c("green", "red"),
  col_hlines = c("blue")
)
}
\arguments{
\item{trajectory}{a trajectory data frame. See `create_trajectory()` for more
details.}

\item{main}{a main title for the plot.}

\item{xlab}{a label for the x-axis.}

\item{ylab}{a label for the y-axis.}

\item{time_indices}{row indices within the trajectory data frame to mark on
the plot. This argument takes either a vector or list of vectors as input.
The output of `find_bouts()` can be passed into this argument, which will
display bouts in green and peaks in red by default.}

\item{hlines}{y-values of horizontal lines to be added to the plot. This is
intended to display the `min_distance` argument from `find_bouts()` so that
users can see how bouts and peaks were separated.}

\item{time_min}{the minimum time to plot.}

\item{time_max}{the maximum time to plot.}

\item{ylim}{the y-limits of the plot. This can be useful to zoom closer to a
horizontal line specified by `hlines`.}

\item{col_time_indices}{colors of each vector of indices in the
`time_indices` argument.}

\item{col_hlines}{colors of each horizontal line in the `hlines` argument.}
}
\description{
This function produces a plot of distances traveled between
  consecutive time points that is intended to aid in determining reasonable
  values for the `min_distance` and `min_time` parameters in `find_bouts()`.
}
\details{
The `time_indices` and `hlines` arguments are intended to be used to
  display the output of `find_bouts()` and the value used for the
  `min_distance` argument of `find_bouts()`.

  If too few peaks are found because the horizontal line shown by `hlines` is
  too high and appears to be over visible peaks, consider decreasing
  `min_distance`. Conversely, if too many peaks are found because the
  horizontal line is too low and captures peaks when the zebrafish is not
  moving significantly, consider increasing `min_distance`.

  If several peaks are not detected because peaks appear to be too spread
  out, consider decreasing `min_time`. Conversely, if too many peaks are
  detected even if not all of the peaks seem to correspond to a full swim
  bout, consider increasing `min_time`.
}
\examples{
trajectory <- create_trajectory(cadmium_zebrafish,
                                x = "X.center",
                                y = "Y.center",
                                t = "Trial.time")
plot_diagnostics(trajectory,
                 xlab = "Time (s)", ylab = "Distance (mm)",
                 hlines = 2, time_min = 1240, time_max = 1260)
bouts_and_peaks_list <- find_bouts(trajectory,
                                   min_distance = 2,
                                   min_time = 0.6,
                                   return_peaks = TRUE)
plot_diagnostics(trajectory,
                 xlab = "Time (s)", ylab = "Distance (mm)",
                 time_indices = bouts_and_peaks_list, hlines = 2,
                 time_min = 1240, time_max = 1260)

}
